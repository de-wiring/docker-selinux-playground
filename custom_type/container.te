policy_module(container, 1.0);

gen_require(`
  type svirt_sandbox_file_t;
  type virt_lxc_var_run_t;
  attribute sandbox_net_domain;
')

########################################
#
# mycontainer_t local policy
#
virt_sandbox_domain_template(mycontainer)
typeattribute mycontainer_t sandbox_net_domain;

allow mycontainer_t self:capability { kill setuid setgid ipc_lock chown dac_read_search dac_override fowner fsetid sys_chroot sys_nice sys_ptrace };
dontaudit mycontainer_t self:capability2 block_suspend;
allow mycontainer_t self:process { execstack execmem };

tunable_policy(`virt_sandbox_use_sys_admin',`
	allow mycontainer_t self:capability sys_admin;
')

tunable_policy(`virt_sandbox_use_netlink',`
	allow mycontainer_t self:netlink_socket create_socket_perms;
	allow mycontainer_t self:netlink_tcpdiag_socket create_netlink_socket_perms;
	allow mycontainer_t self:netlink_kobject_uevent_socket create_socket_perms;
', `
	logging_dontaudit_send_audit_msgs(mycontainer_t)
')

allow mycontainer_t virt_lxc_var_run_t:dir list_dir_perms;
allow mycontainer_t virt_lxc_var_run_t:file read_file_perms;

kernel_read_irq_sysctls(mycontainer_t)
kernel_read_messages(mycontainer_t)

dev_read_sysfs(mycontainer_t)
dev_getattr_mtrr_dev(mycontainer_t)
dev_read_rand(mycontainer_t)
dev_read_urand(mycontainer_t)

files_read_kernel_modules(mycontainer_t)

fs_noxattr_type(svirt_sandbox_file_t)
# Do we actually need these?
fs_mount_cgroup(mycontainer_t)
fs_manage_cgroup_dirs(mycontainer_t)
fs_manage_cgroup_files(mycontainer_t)
# Needed for docker
fs_unmount_xattr_fs(mycontainer_t)

term_pty(svirt_sandbox_file_t)

auth_use_nsswitch(mycontainer_t)

rpm_read_db(mycontainer_t)

logging_send_syslog_msg(mycontainer_t)

tunable_policy(`virt_sandbox_use_audit',`
	logging_send_audit_msgs(mycontainer_t)
')

userdom_use_user_ptys(mycontainer_t)


